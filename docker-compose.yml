version: '3.3'

services:
  db:
    image: postgres:15.4-alpine3.18
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=cms
    volumes:
      - pgdata:/var/lib/postgresql/data

  cms:
    build:
      context: cms
    ports:
      - '1337:1337'
    environment:
      - APP_KEYS=testAppKey
      - API_TOKEN_SALT=testToken
      - TRANSFER_TOKEN_SALT=testTokenSalt
      - ADMIN_JWT_SECRET=testAdminJwtSecret
      - JWT_SECRET=testJwtSecret
      - DATABASE_CLIENT=postgres
      - DATABASE_SSL=false
      - DATABASE_URL=postgres://postgres:postgres@db:5432/cms
    links:
      - db
    depends_on:
      - db
    volumes:
      - ./cms:/app/cms

  client:
    build:
      context: client
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:1337/api
      - NEXT_PUBLIC_DATASETS_API_URL=https://orcasa.apis.ekoal.org
      - NEXT_PUBLIC_NETWORK_SUGGESTION_EMAIL_RECIPIENTS=emilie.vrot@cirad.fr,mathieu.nogues@inrae.fr
      - NEXT_PUBLIC_URL=http://localhost:3000
      - NEXT_PUBLIC_ENVIRONMENT=development
      - NEXT_PUBLIC_GA_TRACKING_ID=someTestValue
      - NEXT_PUBLIC_SHOW_NETWORK_FORMS=false
    links:
      - cms
    volumes:
      - ./client:/app/client

  qgis-server:
    build:
      context: qgis
      dockerfile: Dockerfile
    container_name: qgis-server
    volumes:
      - ./qgis/data:/data:ro
    ports:
      - '5555:5555'
    environment:
      - LANG=en_EN.UTF-8
      - QGIS_PROJECT_FILE=/data/osm.qgs
      - QGIS_SERVER_LOG_LEVEL=0  # INFO (log all requests)
      - DEBUG=1                  # display env before spawning QGIS Server

  nginx:
    image: nginx:latest
    ports:
      - 8080:80
    volumes:
      - ./qgis/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - qgis-server

volumes:
  pgdata:
